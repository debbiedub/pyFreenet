
Revision history for pyFreenet

- Version 0.5.1
    - reduce priority for folder to less important than the external files so the site works after upload

- Version 0.4.9
    - fix more async errors

- Version 0.4.8
    - replace babcom seed IDs
    - more fixes for py3.8

- Version 0.4.7
    - Python <3.6 compat: avoid trailing comma after passing keyword-arguments as dictionary

- Version 0.4.6
    - Python 3.7 compat: async keyword

- Version 0.4.5
    - add new seeds

- Version 0.4.4.2
    - add missing sub-packages of passlib

- Version 0.4.3
    - add babcom_cli
    - create a NEWS symlink (to CHANGELOG)
    - created symlink: babcom.py to babcom_cli (to keep tutorials working)
    - move babcom.py to babcom_cli
    - babcom: clearer performance setup:
    - spawn: add choose_free_port
    - ensure that spawns get stopped at exit, even if something went wrong
    - FIX: all download.freenetproject.org URLs were broken by the new site
    - fix recovery bug and work on freemail, not finished yet
    - fix regression (fcpgenkey, fcpinvertkey and fcpget api breakage for --verbose, --fcpHost and fcpPort). Old options reinstated.
    - recovery provides portable WoT IDs which provide a single, random password to recover the ID

- Version 0.4.2
    - README: document auto-spawning Freenet
    - _rxMsg/_txMsg: Handle data as bytes, all other as strings.
    - _txMsg: String formatting cannot be used on bytes. Format then endcode.
    - add newbase60.py, because it makes the doctest reports nicer
    - babcom: add PY3 constant to check whether weâ€™re running python 3
    - babcom: add appdirs module to find data folders
    - babcom: add persistent state per identity (like solved captchas)
    - babcom: add transient mode
    - babcom: adhere to keyboard interrupt during startup
    - babcom: adhere to pep8
    - babcom: adjust thread and memory limits for WoT and use ram store and cache in transient operation
    - babcom: factor out generating the captcha key
    - babcom: finish announcement.
    - babcom: implement solving captchas
    - babcom: implement truly transient operation by spawning a new node on startup
    - babcom: load wot if it is not loaded
    - babcom: nicer logging format
    - babcom: nicer withprogress
    - babcom: periodically resubmit unsolved CAPTCHAs. Announcement works
    - babcom: polish output for usability (i.e. no . after ID)
    - babcom: staggered progress messages to save threads
    - babcom: use shared fcp connections for the fastget in watchcaptchas and prepareannounce to avoid spawning a huge number of connections.
    - babcom: use time+random solution for the doctest to avoid collisions
    - babcom: use wotmessage() for every call to wot
    - babcom: watching captchas for announcements
    - doc: start communication tutorial
    - document seed ID
    - document that 46 seconds is already pretty good
    - encode messages as bytes before sending.
    - fastput/fastget: use a new node, if the passed node is not running
    - fcp.node: improve documentation
    - fcp.sitemgr: fix UnicodeDecodeError
    - fcp.sitemgr: try to trace the UnicodeDecodeError
    - fcp: add handling of PluginInfo messages
    - fcp: allow killing a node with n.kill()
    - fcp: use fcpVersion from fcp/node.py
    - fcpupload: clean up and fix usage with remote node
    - fcpupload: implement spawn and teardown
    - follow redirects by default (principle of least surprise)
    - freenet.spawn: use logging for info
    - node: add __enter__ and __exit__ to allow using FCPNode in a with-block
    - node: only create an expensive log message at DEBUG level
    - node: txMsg: encode every str item as bytes via utf-8
    - only install scripts in pyFreenet3. pyFreenet2 becomes a pure library
    - prune the trust to seed IDs when creating an ID to reduce the load on WoT
    - rename announce to introduce
    - separate py3 as pyFreenet3 with fcp3 and freenet3
    - set encoding/decoding of data to explicitly use UTF-8.
    - setup: it actually requires wheel
    - sitemgr: fix crash for non-detected encodings
    - start implementing news of the day
    - trigger a *background* download of an ID we announce to.
    - tutorial: add example sessions for CLI and doctests
    - tutorial: add latency hacks
    - tutorial: creating wot IDs
    - updated scripts to Python 3.
    - use the local appdirs
>>>>>>> ArneBab/py3

- Version 0.3.4
    - fix missed messages, thanks to Steve
    - fix DDA, thanks to Steve
    - optimize site upload in freesitemgr
    - add script copyweb (simpler interface to wget)
    - some more debugging

- Version 0.3.1
    - adding a freesite inserts it right away
    - mime-type fixes

- Version 0.3.0
    - completely reviewed (ArneBab)
    - copyweb utility for using wget to mirror sites
    - fcpupload utility to conveniently upload a file to a CHK
    - freesitemgr uses default manifest putter for optimized sites.
    - fcpupload provides the key after queueing the file (except if called with -w)
    - man-page uses the general install rules instead of hand-crafted cp.

- Version 0.2.5
    - added 'noderefbot' - an IRC bot which swaps noderefs automatically

- Version 0.2.4

    - minor bugfix release
    - freesitemgr: now saving updated freesite edition numbers in
      ~/.freesitemgr/<sitename>

- Version 0.2.3

    - added 'fproxyproxy' shim atop fproxy, which should be used as
      a browser proxy, not surfed directly

- Version 0.2.2

    - added 'name services layer' (see 'fcpnames' manpage)
    - integrated this layer into .get()/.put() methods (and
      consequently, into fcpget and fcpput
    - added the utility 'fcpnames', allowing easy management
      of name services

- Version 0.2.1

    - added commands 'help' and 'cleanup' to freesitemgr
    - moved fcpget/fcpput/etc into modules in package fcp, leaving simple
      2-liner front-ends

- Version 0.2

    - added another layer of recovery to freesitemgr, to re-submit
      jobs the node forgets about (ie, losts from its queue)
    - added '-C' option to freesitemgr, to suit its use in crontab entries

- Version 0.1.8

    - another rework of freesitemgr:
        - inserts use only the global queue
        - 'freesitemgr update' exits immediately, leaving jobs on queue
        - extensive accounting, which recognises and compensates for node
          failures
        - you can now safely cron 'freesitemgr update'

- Version 0.1.7

    - rewrote most of freesitemgr:
        - now uses directory ~/.freesitemgr/
        - keeps track of all inserts
        - if interrupted, or if node dies, will resume where
          it left off
        - simplified options

- Version 0.1.6

    - now storing manifests in .freesites (for freesitemgr)
    - freesitemgr now issues progress messages with '-v' set
    - all utils now accept multiple occurrences of '-v' option, with
      increasing verbosity
    - added timeout option to get/put (and '-t' to fcpget/fcpput)

- Version 0.1.5

    - added global queue and persistence support for fcpget/fcpput
    - added 'nowait' option to fcpput

- Version 0.1.4

    - added manpages for console programs
    - improved mimetype determination algorithm for fcp put
    - added 'freedisk', a rudimentary linux filesystem that maps freenet
      into a mountable fs - limited functionality at present
    - added support for use of env vars FCP_HOST and FCP_PORT for specifying
      FCP host/port - useful for people who access FCP across a LAN, since
      it avoids annoyance of having to specify -H or -P with each command

- Version 0.1.3

    - added 'fcpget' and 'fcpput' command-line key retrieve/insert apps
    - added 'freesitemgr' command-line freesite insertion app
    - several bug fixes

- Version 0.1.2

    - added xmlrpc server app
    - added xmlrpc server CGI module (for embedding a Freenet XML-RPC
      server into websites)
    - added 'freesitemgr', a console freesite insertion app

- Version 0.1.1
    - 2006-May-13
        - First packaged release

